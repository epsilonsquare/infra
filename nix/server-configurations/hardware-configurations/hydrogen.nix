# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ahci" "xhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  boot.loader.grub.enable = true;
  boot.loader.grub.device = "/dev/sdb";

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/78a08435-0c7d-4035-8be9-94f59147a36f";
      fsType = "btrfs";
      options = [ "subvol=root" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/78a08435-0c7d-4035-8be9-94f59147a36f";
      fsType = "btrfs";
      options = [ "subvol=nix" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/78a08435-0c7d-4035-8be9-94f59147a36f";
      fsType = "btrfs";
      options = [ "subvol=home" ];
    };

  fileSystems."/var" =
    { device = "/dev/disk/by-uuid/78a08435-0c7d-4035-8be9-94f59147a36f";
      fsType = "btrfs";
      options = [ "subvol=var" ];
    };

  fileSystems."/var/openebs/local" =
    { device = "/dev/disk/by-uuid/78a08435-0c7d-4035-8be9-94f59147a36f";
      fsType = "btrfs";
      options = [ "subvol=openebs-local" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
